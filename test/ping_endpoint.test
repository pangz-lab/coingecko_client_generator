import 'package:coingecko_client/src/endpoints/endpoint_base.dart';
import 'package:coingecko_client/src/services/http_request_service.dart';
import 'package:http/http.dart';

class PingEndpoint extends EndpointBase implements EndpointInterface {
  final String _baseEndpoint = "/ping";
  String _path = "";
  @override
  String get baseEndpoint => _baseEndpoint;
  PingEndpoint(HttpRequestServiceInterface httpRequestService) : super(httpRequestService);

  Future<Response> call({
    required String param0,
    String? param1,
    bool? param2
  }) async {
    _path = _baseEndpoint;
    List<String> keyValueList = [];
    keyValueList.addAll([
      setQueryKeyValue('param0', param0),
      setQueryKeyValue('param1', param1),
      setQueryKeyValue('param2', param2)
    ]);
    keyValueList.removeWhere((e) => e.trim().isEmpty);
    _path += keyValueList.join('&');
    return await send(_path);
  }

  Future<Response> call2({
    required String param0,
    String? param1,
    bool? param2
  }) async {
    _path = _baseEndpoint;
    List<String> keyValueList = [];
    keyValueList.addAll([
      setQueryKeyValue('param0', param0),
      setQueryKeyValue('param1', param1),
      setQueryKeyValue('param2', param2)
    ]);
    keyValueList.removeWhere((e) => e.trim().isEmpty);
    _path += keyValueList.join('&');
    return await send(_path);
  }
}